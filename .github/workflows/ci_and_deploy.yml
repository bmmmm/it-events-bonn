name: "CI + Fetch ICS + Deploy"

permissions:
  contents: write

on:
  push:
    branches: [ main ]
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

jobs:
  build-and-fetch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Ensure calendars folder exists
        run: mkdir -p calendars

      - name: Download ICS feeds and commit if updated
        shell: bash
        run: |
          if [ -f last_updates.json ]; then
            UPDATED_TIMES=$(cat last_updates.json)
          else
            UPDATED_TIMES="{}"
          fi
          count=0
          len=$(jq length calendars.json)
          for i in $(seq 0 $((len-1))); do
            name=$(jq -r ".[$i].name" calendars.json)
            remote_url=$(jq -r ".[$i].src" calendars.json)
            local_path=$(jq -r ".[$i].url" calendars.json)
            tmpfile=$(mktemp)
            if curl -fSL "$remote_url" -o "$tmpfile"; then
              mkdir -p "$(dirname "$local_path")"

              # Zeitstempel immer setzen, sobald das .ics erfolgreich geladen wurde
              t=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
              UPDATED_TIMES=$(echo "$UPDATED_TIMES" | jq ". + {\"$name\": \"$t\"}")

              if [ ! -f "$local_path" ] || ! cmp -s "$tmpfile" "$local_path"; then
                mv "$tmpfile" "$local_path"
                count=$((count+1))
              else
                rm "$tmpfile"
              fi
            else
              rm -f "$tmpfile"
            fi
          done
          echo "$UPDATED_TIMES" > last_updates.json
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add calendars/*.ics last_updates.json
          git diff --cached --quiet || git commit -m "Update ICS & timestamps: $count Kalender aktualisiert"
          git push

  deploy-to-gh-pages:
    needs: build-and-fetch
    runs-on: ubuntu-latest

    steps:
      - name: Checkout for deployment
        uses: actions/checkout@v3
        with:
          ref: main
          persist-credentials: true

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
          publish_branch: gh-pages